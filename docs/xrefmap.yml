### YamlMime:XRefMap
sorted: true
references:
- uid: Netly.Core
  name: Netly.Core
  href: api/Netly.Core.html
  commentId: N:Netly.Core
  fullName: Netly.Core
  nameWithType: Netly.Core
- uid: Netly.Core.Async
  name: Async
  href: api/Netly.Core.Async.html
  commentId: T:Netly.Core.Async
  fullName: Netly.Core.Async
  nameWithType: Async
- uid: Netly.Core.Async.SafePool(Action)
  name: SafePool(Action)
  href: api/Netly.Core.Async.html#Netly_Core_Async_SafePool_Action_
  commentId: M:Netly.Core.Async.SafePool(Action)
  fullName: Netly.Core.Async.SafePool(Action)
  nameWithType: Async.SafePool(Action)
- uid: Netly.Core.Async.SafePool*
  name: SafePool
  href: api/Netly.Core.Async.html#Netly_Core_Async_SafePool_
  commentId: Overload:Netly.Core.Async.SafePool
  isSpec: "True"
  fullName: Netly.Core.Async.SafePool
  nameWithType: Async.SafePool
- uid: Netly.Core.Async.UnsafePool(Action)
  name: UnsafePool(Action)
  href: api/Netly.Core.Async.html#Netly_Core_Async_UnsafePool_Action_
  commentId: M:Netly.Core.Async.UnsafePool(Action)
  fullName: Netly.Core.Async.UnsafePool(Action)
  nameWithType: Async.UnsafePool(Action)
- uid: Netly.Core.Async.UnsafePool*
  name: UnsafePool
  href: api/Netly.Core.Async.html#Netly_Core_Async_UnsafePool_
  commentId: Overload:Netly.Core.Async.UnsafePool
  isSpec: "True"
  fullName: Netly.Core.Async.UnsafePool
  nameWithType: Async.UnsafePool
- uid: Netly.Core.Call
  name: Call
  href: api/Netly.Core.Call.html
  commentId: T:Netly.Core.Call
  fullName: Netly.Core.Call
  nameWithType: Call
- uid: Netly.Core.Call.Automatic
  name: Automatic
  href: api/Netly.Core.Call.html#Netly_Core_Call_Automatic
  commentId: P:Netly.Core.Call.Automatic
  fullName: Netly.Core.Call.Automatic
  nameWithType: Call.Automatic
- uid: Netly.Core.Call.Automatic*
  name: Automatic
  href: api/Netly.Core.Call.html#Netly_Core_Call_Automatic_
  commentId: Overload:Netly.Core.Call.Automatic
  isSpec: "True"
  fullName: Netly.Core.Call.Automatic
  nameWithType: Call.Automatic
- uid: Netly.Core.Call.Execute(Action)
  name: Execute(Action)
  href: api/Netly.Core.Call.html#Netly_Core_Call_Execute_Action_
  commentId: M:Netly.Core.Call.Execute(Action)
  fullName: Netly.Core.Call.Execute(Action)
  nameWithType: Call.Execute(Action)
- uid: Netly.Core.Call.Execute*
  name: Execute
  href: api/Netly.Core.Call.html#Netly_Core_Call_Execute_
  commentId: Overload:Netly.Core.Call.Execute
  isSpec: "True"
  fullName: Netly.Core.Call.Execute
  nameWithType: Call.Execute
- uid: Netly.Core.Call.Publish
  name: Publish()
  href: api/Netly.Core.Call.html#Netly_Core_Call_Publish
  commentId: M:Netly.Core.Call.Publish
  fullName: Netly.Core.Call.Publish()
  nameWithType: Call.Publish()
- uid: Netly.Core.Call.Publish*
  name: Publish
  href: api/Netly.Core.Call.html#Netly_Core_Call_Publish_
  commentId: Overload:Netly.Core.Call.Publish
  isSpec: "True"
  fullName: Netly.Core.Call.Publish
  nameWithType: Call.Publish
- uid: Netly.Core.Compare
  name: Compare
  href: api/Netly.Core.Compare.html
  commentId: T:Netly.Core.Compare
  fullName: Netly.Core.Compare
  nameWithType: Compare
- uid: Netly.Core.Compare.Bytes(System.Byte[][])
  name: Bytes(Byte[][])
  href: api/Netly.Core.Compare.html#Netly_Core_Compare_Bytes_System_Byte_____
  commentId: M:Netly.Core.Compare.Bytes(System.Byte[][])
  name.vb: Bytes(Byte()())
  fullName: Netly.Core.Compare.Bytes(System.Byte[][])
  fullName.vb: Netly.Core.Compare.Bytes(System.Byte()())
  nameWithType: Compare.Bytes(Byte[][])
  nameWithType.vb: Compare.Bytes(Byte()())
- uid: Netly.Core.Compare.Bytes*
  name: Bytes
  href: api/Netly.Core.Compare.html#Netly_Core_Compare_Bytes_
  commentId: Overload:Netly.Core.Compare.Bytes
  isSpec: "True"
  fullName: Netly.Core.Compare.Bytes
  nameWithType: Compare.Bytes
- uid: Netly.Core.Compare.String(System.String[])
  name: String(String[])
  href: api/Netly.Core.Compare.html#Netly_Core_Compare_String_System_String___
  commentId: M:Netly.Core.Compare.String(System.String[])
  name.vb: String(String())
  fullName: Netly.Core.Compare.String(System.String[])
  fullName.vb: Netly.Core.Compare.String(System.String())
  nameWithType: Compare.String(String[])
  nameWithType.vb: Compare.String(String())
- uid: Netly.Core.Compare.String*
  name: String
  href: api/Netly.Core.Compare.html#Netly_Core_Compare_String_
  commentId: Overload:Netly.Core.Compare.String
  isSpec: "True"
  fullName: Netly.Core.Compare.String
  nameWithType: Compare.String
- uid: Netly.Core.Compress
  name: Compress
  href: api/Netly.Core.Compress.html
  commentId: T:Netly.Core.Compress
  fullName: Netly.Core.Compress
  nameWithType: Compress
- uid: Netly.Core.Compress.Decode(System.Byte[],Netly.Core.Compress.Mode)
  name: Decode(Byte[], Compress.Mode)
  href: api/Netly.Core.Compress.html#Netly_Core_Compress_Decode_System_Byte___Netly_Core_Compress_Mode_
  commentId: M:Netly.Core.Compress.Decode(System.Byte[],Netly.Core.Compress.Mode)
  name.vb: Decode(Byte(), Compress.Mode)
  fullName: Netly.Core.Compress.Decode(System.Byte[], Netly.Core.Compress.Mode)
  fullName.vb: Netly.Core.Compress.Decode(System.Byte(), Netly.Core.Compress.Mode)
  nameWithType: Compress.Decode(Byte[], Compress.Mode)
  nameWithType.vb: Compress.Decode(Byte(), Compress.Mode)
- uid: Netly.Core.Compress.Decode*
  name: Decode
  href: api/Netly.Core.Compress.html#Netly_Core_Compress_Decode_
  commentId: Overload:Netly.Core.Compress.Decode
  isSpec: "True"
  fullName: Netly.Core.Compress.Decode
  nameWithType: Compress.Decode
- uid: Netly.Core.Compress.Encode(System.Byte[],Netly.Core.Compress.Mode)
  name: Encode(Byte[], Compress.Mode)
  href: api/Netly.Core.Compress.html#Netly_Core_Compress_Encode_System_Byte___Netly_Core_Compress_Mode_
  commentId: M:Netly.Core.Compress.Encode(System.Byte[],Netly.Core.Compress.Mode)
  name.vb: Encode(Byte(), Compress.Mode)
  fullName: Netly.Core.Compress.Encode(System.Byte[], Netly.Core.Compress.Mode)
  fullName.vb: Netly.Core.Compress.Encode(System.Byte(), Netly.Core.Compress.Mode)
  nameWithType: Compress.Encode(Byte[], Compress.Mode)
  nameWithType.vb: Compress.Encode(Byte(), Compress.Mode)
- uid: Netly.Core.Compress.Encode*
  name: Encode
  href: api/Netly.Core.Compress.html#Netly_Core_Compress_Encode_
  commentId: Overload:Netly.Core.Compress.Encode
  isSpec: "True"
  fullName: Netly.Core.Compress.Encode
  nameWithType: Compress.Encode
- uid: Netly.Core.Compress.Mode
  name: Compress.Mode
  href: api/Netly.Core.Compress.Mode.html
  commentId: T:Netly.Core.Compress.Mode
  fullName: Netly.Core.Compress.Mode
  nameWithType: Compress.Mode
- uid: Netly.Core.Compress.Mode.GZIP
  name: GZIP
  href: api/Netly.Core.Compress.Mode.html#Netly_Core_Compress_Mode_GZIP
  commentId: F:Netly.Core.Compress.Mode.GZIP
  fullName: Netly.Core.Compress.Mode.GZIP
  nameWithType: Compress.Mode.GZIP
- uid: Netly.Core.Concat
  name: Concat
  href: api/Netly.Core.Concat.html
  commentId: T:Netly.Core.Concat
  fullName: Netly.Core.Concat
  nameWithType: Concat
- uid: Netly.Core.Concat.Bytes(System.Byte[][])
  name: Bytes(Byte[][])
  href: api/Netly.Core.Concat.html#Netly_Core_Concat_Bytes_System_Byte_____
  commentId: M:Netly.Core.Concat.Bytes(System.Byte[][])
  name.vb: Bytes(Byte()())
  fullName: Netly.Core.Concat.Bytes(System.Byte[][])
  fullName.vb: Netly.Core.Concat.Bytes(System.Byte()())
  nameWithType: Concat.Bytes(Byte[][])
  nameWithType.vb: Concat.Bytes(Byte()())
- uid: Netly.Core.Concat.Bytes*
  name: Bytes
  href: api/Netly.Core.Concat.html#Netly_Core_Concat_Bytes_
  commentId: Overload:Netly.Core.Concat.Bytes
  isSpec: "True"
  fullName: Netly.Core.Concat.Bytes
  nameWithType: Concat.Bytes
- uid: Netly.Core.Concat.String(System.String[])
  name: String(String[])
  href: api/Netly.Core.Concat.html#Netly_Core_Concat_String_System_String___
  commentId: M:Netly.Core.Concat.String(System.String[])
  name.vb: String(String())
  fullName: Netly.Core.Concat.String(System.String[])
  fullName.vb: Netly.Core.Concat.String(System.String())
  nameWithType: Concat.String(String[])
  nameWithType.vb: Concat.String(String())
- uid: Netly.Core.Concat.String*
  name: String
  href: api/Netly.Core.Concat.html#Netly_Core_Concat_String_
  commentId: Overload:Netly.Core.Concat.String
  isSpec: "True"
  fullName: Netly.Core.Concat.String
  nameWithType: Concat.String
- uid: Netly.Core.Dict
  name: Dict
  href: api/Netly.Core.Dict.html
  commentId: T:Netly.Core.Dict
  fullName: Netly.Core.Dict
  nameWithType: Dict
- uid: Netly.Core.Dict.Add*
  name: Add
  href: api/Netly.Core.Dict.html#Netly_Core_Dict_Add_
  commentId: Overload:Netly.Core.Dict.Add
  isSpec: "True"
  fullName: Netly.Core.Dict.Add
  nameWithType: Dict.Add
- uid: Netly.Core.Dict.Add``1(``0)
  name: Add<T>(T)
  href: api/Netly.Core.Dict.html#Netly_Core_Dict_Add__1___0_
  commentId: M:Netly.Core.Dict.Add``1(``0)
  name.vb: Add(Of T)(T)
  fullName: Netly.Core.Dict.Add<T>(T)
  fullName.vb: Netly.Core.Dict.Add(Of T)(T)
  nameWithType: Dict.Add<T>(T)
  nameWithType.vb: Dict.Add(Of T)(T)
- uid: Netly.Core.Dict.Get*
  name: Get
  href: api/Netly.Core.Dict.html#Netly_Core_Dict_Get_
  commentId: Overload:Netly.Core.Dict.Get
  isSpec: "True"
  fullName: Netly.Core.Dict.Get
  nameWithType: Dict.Get
- uid: Netly.Core.Dict.Get``1
  name: Get<T>()
  href: api/Netly.Core.Dict.html#Netly_Core_Dict_Get__1
  commentId: M:Netly.Core.Dict.Get``1
  name.vb: Get(Of T)()
  fullName: Netly.Core.Dict.Get<T>()
  fullName.vb: Netly.Core.Dict.Get(Of T)()
  nameWithType: Dict.Get<T>()
  nameWithType.vb: Dict.Get(Of T)()
- uid: Netly.Core.Dict.GetBytes
  name: GetBytes()
  href: api/Netly.Core.Dict.html#Netly_Core_Dict_GetBytes
  commentId: M:Netly.Core.Dict.GetBytes
  fullName: Netly.Core.Dict.GetBytes()
  nameWithType: Dict.GetBytes()
- uid: Netly.Core.Dict.GetBytes*
  name: GetBytes
  href: api/Netly.Core.Dict.html#Netly_Core_Dict_GetBytes_
  commentId: Overload:Netly.Core.Dict.GetBytes
  isSpec: "True"
  fullName: Netly.Core.Dict.GetBytes
  nameWithType: Dict.GetBytes
- uid: Netly.Core.Dict.Position
  name: Position
  href: api/Netly.Core.Dict.html#Netly_Core_Dict_Position
  commentId: P:Netly.Core.Dict.Position
  fullName: Netly.Core.Dict.Position
  nameWithType: Dict.Position
- uid: Netly.Core.Dict.Position*
  name: Position
  href: api/Netly.Core.Dict.html#Netly_Core_Dict_Position_
  commentId: Overload:Netly.Core.Dict.Position
  isSpec: "True"
  fullName: Netly.Core.Dict.Position
  nameWithType: Dict.Position
- uid: Netly.Core.Dict.SetBytes(System.Byte[])
  name: SetBytes(Byte[])
  href: api/Netly.Core.Dict.html#Netly_Core_Dict_SetBytes_System_Byte___
  commentId: M:Netly.Core.Dict.SetBytes(System.Byte[])
  name.vb: SetBytes(Byte())
  fullName: Netly.Core.Dict.SetBytes(System.Byte[])
  fullName.vb: Netly.Core.Dict.SetBytes(System.Byte())
  nameWithType: Dict.SetBytes(Byte[])
  nameWithType.vb: Dict.SetBytes(Byte())
- uid: Netly.Core.Dict.SetBytes*
  name: SetBytes
  href: api/Netly.Core.Dict.html#Netly_Core_Dict_SetBytes_
  commentId: Overload:Netly.Core.Dict.SetBytes
  isSpec: "True"
  fullName: Netly.Core.Dict.SetBytes
  nameWithType: Dict.SetBytes
- uid: Netly.Core.Dict.TypeAccpted
  name: TypeAccpted
  href: api/Netly.Core.Dict.html#Netly_Core_Dict_TypeAccpted
  commentId: F:Netly.Core.Dict.TypeAccpted
  fullName: Netly.Core.Dict.TypeAccpted
  nameWithType: Dict.TypeAccpted
- uid: Netly.Core.Encode
  name: Encode
  href: api/Netly.Core.Encode.html
  commentId: T:Netly.Core.Encode
  fullName: Netly.Core.Encode
  nameWithType: Encode
- uid: Netly.Core.Encode.Default
  name: Default
  href: api/Netly.Core.Encode.html#Netly_Core_Encode_Default
  commentId: P:Netly.Core.Encode.Default
  fullName: Netly.Core.Encode.Default
  nameWithType: Encode.Default
- uid: Netly.Core.Encode.Default*
  name: Default
  href: api/Netly.Core.Encode.html#Netly_Core_Encode_Default_
  commentId: Overload:Netly.Core.Encode.Default
  isSpec: "True"
  fullName: Netly.Core.Encode.Default
  nameWithType: Encode.Default
- uid: Netly.Core.Encode.GetBytes(System.String)
  name: GetBytes(String)
  href: api/Netly.Core.Encode.html#Netly_Core_Encode_GetBytes_System_String_
  commentId: M:Netly.Core.Encode.GetBytes(System.String)
  fullName: Netly.Core.Encode.GetBytes(System.String)
  nameWithType: Encode.GetBytes(String)
- uid: Netly.Core.Encode.GetBytes(System.String,Netly.Core.Encode.Mode)
  name: GetBytes(String, Encode.Mode)
  href: api/Netly.Core.Encode.html#Netly_Core_Encode_GetBytes_System_String_Netly_Core_Encode_Mode_
  commentId: M:Netly.Core.Encode.GetBytes(System.String,Netly.Core.Encode.Mode)
  fullName: Netly.Core.Encode.GetBytes(System.String, Netly.Core.Encode.Mode)
  nameWithType: Encode.GetBytes(String, Encode.Mode)
- uid: Netly.Core.Encode.GetBytes*
  name: GetBytes
  href: api/Netly.Core.Encode.html#Netly_Core_Encode_GetBytes_
  commentId: Overload:Netly.Core.Encode.GetBytes
  isSpec: "True"
  fullName: Netly.Core.Encode.GetBytes
  nameWithType: Encode.GetBytes
- uid: Netly.Core.Encode.GetString(System.Byte[])
  name: GetString(Byte[])
  href: api/Netly.Core.Encode.html#Netly_Core_Encode_GetString_System_Byte___
  commentId: M:Netly.Core.Encode.GetString(System.Byte[])
  name.vb: GetString(Byte())
  fullName: Netly.Core.Encode.GetString(System.Byte[])
  fullName.vb: Netly.Core.Encode.GetString(System.Byte())
  nameWithType: Encode.GetString(Byte[])
  nameWithType.vb: Encode.GetString(Byte())
- uid: Netly.Core.Encode.GetString(System.Byte[],Netly.Core.Encode.Mode)
  name: GetString(Byte[], Encode.Mode)
  href: api/Netly.Core.Encode.html#Netly_Core_Encode_GetString_System_Byte___Netly_Core_Encode_Mode_
  commentId: M:Netly.Core.Encode.GetString(System.Byte[],Netly.Core.Encode.Mode)
  name.vb: GetString(Byte(), Encode.Mode)
  fullName: Netly.Core.Encode.GetString(System.Byte[], Netly.Core.Encode.Mode)
  fullName.vb: Netly.Core.Encode.GetString(System.Byte(), Netly.Core.Encode.Mode)
  nameWithType: Encode.GetString(Byte[], Encode.Mode)
  nameWithType.vb: Encode.GetString(Byte(), Encode.Mode)
- uid: Netly.Core.Encode.GetString*
  name: GetString
  href: api/Netly.Core.Encode.html#Netly_Core_Encode_GetString_
  commentId: Overload:Netly.Core.Encode.GetString
  isSpec: "True"
  fullName: Netly.Core.Encode.GetString
  nameWithType: Encode.GetString
- uid: Netly.Core.Encode.Mode
  name: Encode.Mode
  href: api/Netly.Core.Encode.Mode.html
  commentId: T:Netly.Core.Encode.Mode
  fullName: Netly.Core.Encode.Mode
  nameWithType: Encode.Mode
- uid: Netly.Core.Encode.Mode.ASSCI
  name: ASSCI
  href: api/Netly.Core.Encode.Mode.html#Netly_Core_Encode_Mode_ASSCI
  commentId: F:Netly.Core.Encode.Mode.ASSCI
  fullName: Netly.Core.Encode.Mode.ASSCI
  nameWithType: Encode.Mode.ASSCI
- uid: Netly.Core.Encode.Mode.UNICODE
  name: UNICODE
  href: api/Netly.Core.Encode.Mode.html#Netly_Core_Encode_Mode_UNICODE
  commentId: F:Netly.Core.Encode.Mode.UNICODE
  fullName: Netly.Core.Encode.Mode.UNICODE
  nameWithType: Encode.Mode.UNICODE
- uid: Netly.Core.Encode.Mode.UTF8
  name: UTF8
  href: api/Netly.Core.Encode.Mode.html#Netly_Core_Encode_Mode_UTF8
  commentId: F:Netly.Core.Encode.Mode.UTF8
  fullName: Netly.Core.Encode.Mode.UTF8
  nameWithType: Encode.Mode.UTF8
- uid: Netly.Core.Events
  name: Events
  href: api/Netly.Core.Events.html
  commentId: T:Netly.Core.Events
  fullName: Netly.Core.Events
  nameWithType: Events
- uid: Netly.Core.Events.Create(System.String,System.Byte[])
  name: Create(String, Byte[])
  href: api/Netly.Core.Events.html#Netly_Core_Events_Create_System_String_System_Byte___
  commentId: M:Netly.Core.Events.Create(System.String,System.Byte[])
  name.vb: Create(String, Byte())
  fullName: Netly.Core.Events.Create(System.String, System.Byte[])
  fullName.vb: Netly.Core.Events.Create(System.String, System.Byte())
  nameWithType: Events.Create(String, Byte[])
  nameWithType.vb: Events.Create(String, Byte())
- uid: Netly.Core.Events.Create*
  name: Create
  href: api/Netly.Core.Events.html#Netly_Core_Events_Create_
  commentId: Overload:Netly.Core.Events.Create
  isSpec: "True"
  fullName: Netly.Core.Events.Create
  nameWithType: Events.Create
- uid: Netly.Core.Events.Verify(System.Byte[])
  name: Verify(Byte[])
  href: api/Netly.Core.Events.html#Netly_Core_Events_Verify_System_Byte___
  commentId: M:Netly.Core.Events.Verify(System.Byte[])
  name.vb: Verify(Byte())
  fullName: Netly.Core.Events.Verify(System.Byte[])
  fullName.vb: Netly.Core.Events.Verify(System.Byte())
  nameWithType: Events.Verify(Byte[])
  nameWithType.vb: Events.Verify(Byte())
- uid: Netly.Core.Events.Verify*
  name: Verify
  href: api/Netly.Core.Events.html#Netly_Core_Events_Verify_
  commentId: Overload:Netly.Core.Events.Verify
  isSpec: "True"
  fullName: Netly.Core.Events.Verify
  nameWithType: Events.Verify
- uid: Netly.Core.Host
  name: Host
  href: api/Netly.Core.Host.html
  commentId: T:Netly.Core.Host
  fullName: Netly.Core.Host
  nameWithType: Host
- uid: Netly.Core.Host.#ctor(EndPoint)
  name: Host(EndPoint)
  href: api/Netly.Core.Host.html#Netly_Core_Host__ctor_EndPoint_
  commentId: M:Netly.Core.Host.#ctor(EndPoint)
  fullName: Netly.Core.Host.Host(EndPoint)
  nameWithType: Host.Host(EndPoint)
- uid: Netly.Core.Host.#ctor(IPAddress,System.Int32)
  name: Host(IPAddress, Int32)
  href: api/Netly.Core.Host.html#Netly_Core_Host__ctor_IPAddress_System_Int32_
  commentId: M:Netly.Core.Host.#ctor(IPAddress,System.Int32)
  fullName: Netly.Core.Host.Host(IPAddress, System.Int32)
  nameWithType: Host.Host(IPAddress, Int32)
- uid: Netly.Core.Host.#ctor(IPEndPoint)
  name: Host(IPEndPoint)
  href: api/Netly.Core.Host.html#Netly_Core_Host__ctor_IPEndPoint_
  commentId: M:Netly.Core.Host.#ctor(IPEndPoint)
  fullName: Netly.Core.Host.Host(IPEndPoint)
  nameWithType: Host.Host(IPEndPoint)
- uid: Netly.Core.Host.#ctor(System.String,System.Int32)
  name: Host(String, Int32)
  href: api/Netly.Core.Host.html#Netly_Core_Host__ctor_System_String_System_Int32_
  commentId: M:Netly.Core.Host.#ctor(System.String,System.Int32)
  fullName: Netly.Core.Host.Host(System.String, System.Int32)
  nameWithType: Host.Host(String, Int32)
- uid: Netly.Core.Host.#ctor*
  name: Host
  href: api/Netly.Core.Host.html#Netly_Core_Host__ctor_
  commentId: Overload:Netly.Core.Host.#ctor
  isSpec: "True"
  fullName: Netly.Core.Host.Host
  nameWithType: Host.Host
- uid: Netly.Core.Host.Address
  name: Address
  href: api/Netly.Core.Host.html#Netly_Core_Host_Address
  commentId: P:Netly.Core.Host.Address
  fullName: Netly.Core.Host.Address
  nameWithType: Host.Address
- uid: Netly.Core.Host.Address*
  name: Address
  href: api/Netly.Core.Host.html#Netly_Core_Host_Address_
  commentId: Overload:Netly.Core.Host.Address
  isSpec: "True"
  fullName: Netly.Core.Host.Address
  nameWithType: Host.Address
- uid: Netly.Core.Host.AddressFamily
  name: AddressFamily
  href: api/Netly.Core.Host.html#Netly_Core_Host_AddressFamily
  commentId: P:Netly.Core.Host.AddressFamily
  fullName: Netly.Core.Host.AddressFamily
  nameWithType: Host.AddressFamily
- uid: Netly.Core.Host.AddressFamily*
  name: AddressFamily
  href: api/Netly.Core.Host.html#Netly_Core_Host_AddressFamily_
  commentId: Overload:Netly.Core.Host.AddressFamily
  isSpec: "True"
  fullName: Netly.Core.Host.AddressFamily
  nameWithType: Host.AddressFamily
- uid: Netly.Core.Host.EndPoint
  name: EndPoint
  href: api/Netly.Core.Host.html#Netly_Core_Host_EndPoint
  commentId: P:Netly.Core.Host.EndPoint
  fullName: Netly.Core.Host.EndPoint
  nameWithType: Host.EndPoint
- uid: Netly.Core.Host.EndPoint*
  name: EndPoint
  href: api/Netly.Core.Host.html#Netly_Core_Host_EndPoint_
  commentId: Overload:Netly.Core.Host.EndPoint
  isSpec: "True"
  fullName: Netly.Core.Host.EndPoint
  nameWithType: Host.EndPoint
- uid: Netly.Core.Host.IPEndPoint
  name: IPEndPoint
  href: api/Netly.Core.Host.html#Netly_Core_Host_IPEndPoint
  commentId: P:Netly.Core.Host.IPEndPoint
  fullName: Netly.Core.Host.IPEndPoint
  nameWithType: Host.IPEndPoint
- uid: Netly.Core.Host.IPEndPoint*
  name: IPEndPoint
  href: api/Netly.Core.Host.html#Netly_Core_Host_IPEndPoint_
  commentId: Overload:Netly.Core.Host.IPEndPoint
  isSpec: "True"
  fullName: Netly.Core.Host.IPEndPoint
  nameWithType: Host.IPEndPoint
- uid: Netly.Core.Host.Port
  name: Port
  href: api/Netly.Core.Host.html#Netly_Core_Host_Port
  commentId: P:Netly.Core.Host.Port
  fullName: Netly.Core.Host.Port
  nameWithType: Host.Port
- uid: Netly.Core.Host.Port*
  name: Port
  href: api/Netly.Core.Host.html#Netly_Core_Host_Port_
  commentId: Overload:Netly.Core.Host.Port
  isSpec: "True"
  fullName: Netly.Core.Host.Port
  nameWithType: Host.Port
- uid: Netly.Core.Host.ToString
  name: ToString()
  href: api/Netly.Core.Host.html#Netly_Core_Host_ToString
  commentId: M:Netly.Core.Host.ToString
  fullName: Netly.Core.Host.ToString()
  nameWithType: Host.ToString()
- uid: Netly.Core.Host.ToString*
  name: ToString
  href: api/Netly.Core.Host.html#Netly_Core_Host_ToString_
  commentId: Overload:Netly.Core.Host.ToString
  isSpec: "True"
  fullName: Netly.Core.Host.ToString
  nameWithType: Host.ToString
- uid: Netly.Tcp
  name: Netly.Tcp
  href: api/Netly.Tcp.html
  commentId: N:Netly.Tcp
  fullName: Netly.Tcp
  nameWithType: Netly.Tcp
- uid: Netly.Tcp.TcpClient
  name: TcpClient
  href: api/Netly.Tcp.TcpClient.html
  commentId: T:Netly.Tcp.TcpClient
  fullName: Netly.Tcp.TcpClient
  nameWithType: TcpClient
- uid: Netly.Tcp.TcpClient.#ctor
  name: TcpClient()
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient__ctor
  commentId: M:Netly.Tcp.TcpClient.#ctor
  fullName: Netly.Tcp.TcpClient.TcpClient()
  nameWithType: TcpClient.TcpClient()
- uid: Netly.Tcp.TcpClient.#ctor*
  name: TcpClient
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient__ctor_
  commentId: Overload:Netly.Tcp.TcpClient.#ctor
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.TcpClient
  nameWithType: TcpClient.TcpClient
- uid: Netly.Tcp.TcpClient.Close
  name: Close()
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_Close
  commentId: M:Netly.Tcp.TcpClient.Close
  fullName: Netly.Tcp.TcpClient.Close()
  nameWithType: TcpClient.Close()
- uid: Netly.Tcp.TcpClient.Close*
  name: Close
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_Close_
  commentId: Overload:Netly.Tcp.TcpClient.Close
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.Close
  nameWithType: TcpClient.Close
- uid: Netly.Tcp.TcpClient.Host
  name: Host
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_Host
  commentId: P:Netly.Tcp.TcpClient.Host
  fullName: Netly.Tcp.TcpClient.Host
  nameWithType: TcpClient.Host
- uid: Netly.Tcp.TcpClient.Host*
  name: Host
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_Host_
  commentId: Overload:Netly.Tcp.TcpClient.Host
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.Host
  nameWithType: TcpClient.Host
- uid: Netly.Tcp.TcpClient.Id
  name: Id
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_Id
  commentId: P:Netly.Tcp.TcpClient.Id
  fullName: Netly.Tcp.TcpClient.Id
  nameWithType: TcpClient.Id
- uid: Netly.Tcp.TcpClient.Id*
  name: Id
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_Id_
  commentId: Overload:Netly.Tcp.TcpClient.Id
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.Id
  nameWithType: TcpClient.Id
- uid: Netly.Tcp.TcpClient.IsEncrypted
  name: IsEncrypted
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_IsEncrypted
  commentId: P:Netly.Tcp.TcpClient.IsEncrypted
  fullName: Netly.Tcp.TcpClient.IsEncrypted
  nameWithType: TcpClient.IsEncrypted
- uid: Netly.Tcp.TcpClient.IsEncrypted*
  name: IsEncrypted
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_IsEncrypted_
  commentId: Overload:Netly.Tcp.TcpClient.IsEncrypted
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.IsEncrypted
  nameWithType: TcpClient.IsEncrypted
- uid: Netly.Tcp.TcpClient.OnAfterOpen(Action{Socket})
  name: OnAfterOpen(Action<Socket>)
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_OnAfterOpen_Action_Socket__
  commentId: M:Netly.Tcp.TcpClient.OnAfterOpen(Action{Socket})
  name.vb: OnAfterOpen(Action(Of Socket))
  fullName: Netly.Tcp.TcpClient.OnAfterOpen(Action<Socket>)
  fullName.vb: Netly.Tcp.TcpClient.OnAfterOpen(Action(Of Socket))
  nameWithType: TcpClient.OnAfterOpen(Action<Socket>)
  nameWithType.vb: TcpClient.OnAfterOpen(Action(Of Socket))
- uid: Netly.Tcp.TcpClient.OnAfterOpen*
  name: OnAfterOpen
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_OnAfterOpen_
  commentId: Overload:Netly.Tcp.TcpClient.OnAfterOpen
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.OnAfterOpen
  nameWithType: TcpClient.OnAfterOpen
- uid: Netly.Tcp.TcpClient.OnBeforeOpen(Action{Socket})
  name: OnBeforeOpen(Action<Socket>)
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_OnBeforeOpen_Action_Socket__
  commentId: M:Netly.Tcp.TcpClient.OnBeforeOpen(Action{Socket})
  name.vb: OnBeforeOpen(Action(Of Socket))
  fullName: Netly.Tcp.TcpClient.OnBeforeOpen(Action<Socket>)
  fullName.vb: Netly.Tcp.TcpClient.OnBeforeOpen(Action(Of Socket))
  nameWithType: TcpClient.OnBeforeOpen(Action<Socket>)
  nameWithType.vb: TcpClient.OnBeforeOpen(Action(Of Socket))
- uid: Netly.Tcp.TcpClient.OnBeforeOpen*
  name: OnBeforeOpen
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_OnBeforeOpen_
  commentId: Overload:Netly.Tcp.TcpClient.OnBeforeOpen
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.OnBeforeOpen
  nameWithType: TcpClient.OnBeforeOpen
- uid: Netly.Tcp.TcpClient.OnClose(Action)
  name: OnClose(Action)
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_OnClose_Action_
  commentId: M:Netly.Tcp.TcpClient.OnClose(Action)
  fullName: Netly.Tcp.TcpClient.OnClose(Action)
  nameWithType: TcpClient.OnClose(Action)
- uid: Netly.Tcp.TcpClient.OnClose*
  name: OnClose
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_OnClose_
  commentId: Overload:Netly.Tcp.TcpClient.OnClose
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.OnClose
  nameWithType: TcpClient.OnClose
- uid: Netly.Tcp.TcpClient.OnData(Action{System.Byte[]})
  name: OnData(Action<Byte[]>)
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_OnData_Action_System_Byte____
  commentId: M:Netly.Tcp.TcpClient.OnData(Action{System.Byte[]})
  name.vb: OnData(Action(Of Byte()))
  fullName: Netly.Tcp.TcpClient.OnData(Action<System.Byte[]>)
  fullName.vb: Netly.Tcp.TcpClient.OnData(Action(Of System.Byte()))
  nameWithType: TcpClient.OnData(Action<Byte[]>)
  nameWithType.vb: TcpClient.OnData(Action(Of Byte()))
- uid: Netly.Tcp.TcpClient.OnData*
  name: OnData
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_OnData_
  commentId: Overload:Netly.Tcp.TcpClient.OnData
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.OnData
  nameWithType: TcpClient.OnData
- uid: Netly.Tcp.TcpClient.OnError(Action{Exception})
  name: OnError(Action<Exception>)
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_OnError_Action_Exception__
  commentId: M:Netly.Tcp.TcpClient.OnError(Action{Exception})
  name.vb: OnError(Action(Of Exception))
  fullName: Netly.Tcp.TcpClient.OnError(Action<Exception>)
  fullName.vb: Netly.Tcp.TcpClient.OnError(Action(Of Exception))
  nameWithType: TcpClient.OnError(Action<Exception>)
  nameWithType.vb: TcpClient.OnError(Action(Of Exception))
- uid: Netly.Tcp.TcpClient.OnError*
  name: OnError
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_OnError_
  commentId: Overload:Netly.Tcp.TcpClient.OnError
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.OnError
  nameWithType: TcpClient.OnError
- uid: Netly.Tcp.TcpClient.OnEvent(Action{System.String,System.Byte[]})
  name: OnEvent(Action<String, Byte[]>)
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_OnEvent_Action_System_String_System_Byte____
  commentId: M:Netly.Tcp.TcpClient.OnEvent(Action{System.String,System.Byte[]})
  name.vb: OnEvent(Action(Of String, Byte()))
  fullName: Netly.Tcp.TcpClient.OnEvent(Action<System.String, System.Byte[]>)
  fullName.vb: Netly.Tcp.TcpClient.OnEvent(Action(Of System.String, System.Byte()))
  nameWithType: TcpClient.OnEvent(Action<String, Byte[]>)
  nameWithType.vb: TcpClient.OnEvent(Action(Of String, Byte()))
- uid: Netly.Tcp.TcpClient.OnEvent*
  name: OnEvent
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_OnEvent_
  commentId: Overload:Netly.Tcp.TcpClient.OnEvent
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.OnEvent
  nameWithType: TcpClient.OnEvent
- uid: Netly.Tcp.TcpClient.OnOpen(Action)
  name: OnOpen(Action)
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_OnOpen_Action_
  commentId: M:Netly.Tcp.TcpClient.OnOpen(Action)
  fullName: Netly.Tcp.TcpClient.OnOpen(Action)
  nameWithType: TcpClient.OnOpen(Action)
- uid: Netly.Tcp.TcpClient.OnOpen*
  name: OnOpen
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_OnOpen_
  commentId: Overload:Netly.Tcp.TcpClient.OnOpen
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.OnOpen
  nameWithType: TcpClient.OnOpen
- uid: Netly.Tcp.TcpClient.Open(Netly.Core.Host)
  name: Open(Host)
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_Open_Netly_Core_Host_
  commentId: M:Netly.Tcp.TcpClient.Open(Netly.Core.Host)
  fullName: Netly.Tcp.TcpClient.Open(Netly.Core.Host)
  nameWithType: TcpClient.Open(Host)
- uid: Netly.Tcp.TcpClient.Open*
  name: Open
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_Open_
  commentId: Overload:Netly.Tcp.TcpClient.Open
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.Open
  nameWithType: TcpClient.Open
- uid: Netly.Tcp.TcpClient.Opened
  name: Opened
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_Opened
  commentId: P:Netly.Tcp.TcpClient.Opened
  fullName: Netly.Tcp.TcpClient.Opened
  nameWithType: TcpClient.Opened
- uid: Netly.Tcp.TcpClient.Opened*
  name: Opened
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_Opened_
  commentId: Overload:Netly.Tcp.TcpClient.Opened
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.Opened
  nameWithType: TcpClient.Opened
- uid: Netly.Tcp.TcpClient.ToData(System.Byte[])
  name: ToData(Byte[])
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_ToData_System_Byte___
  commentId: M:Netly.Tcp.TcpClient.ToData(System.Byte[])
  name.vb: ToData(Byte())
  fullName: Netly.Tcp.TcpClient.ToData(System.Byte[])
  fullName.vb: Netly.Tcp.TcpClient.ToData(System.Byte())
  nameWithType: TcpClient.ToData(Byte[])
  nameWithType.vb: TcpClient.ToData(Byte())
- uid: Netly.Tcp.TcpClient.ToData*
  name: ToData
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_ToData_
  commentId: Overload:Netly.Tcp.TcpClient.ToData
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.ToData
  nameWithType: TcpClient.ToData
- uid: Netly.Tcp.TcpClient.ToEvent(System.String,System.Byte[])
  name: ToEvent(String, Byte[])
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_ToEvent_System_String_System_Byte___
  commentId: M:Netly.Tcp.TcpClient.ToEvent(System.String,System.Byte[])
  name.vb: ToEvent(String, Byte())
  fullName: Netly.Tcp.TcpClient.ToEvent(System.String, System.Byte[])
  fullName.vb: Netly.Tcp.TcpClient.ToEvent(System.String, System.Byte())
  nameWithType: TcpClient.ToEvent(String, Byte[])
  nameWithType.vb: TcpClient.ToEvent(String, Byte())
- uid: Netly.Tcp.TcpClient.ToEvent*
  name: ToEvent
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_ToEvent_
  commentId: Overload:Netly.Tcp.TcpClient.ToEvent
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.ToEvent
  nameWithType: TcpClient.ToEvent
- uid: Netly.Tcp.TcpClient.UseEncryption(System.Boolean)
  name: UseEncryption(Boolean)
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_UseEncryption_System_Boolean_
  commentId: M:Netly.Tcp.TcpClient.UseEncryption(System.Boolean)
  fullName: Netly.Tcp.TcpClient.UseEncryption(System.Boolean)
  nameWithType: TcpClient.UseEncryption(Boolean)
- uid: Netly.Tcp.TcpClient.UseEncryption*
  name: UseEncryption
  href: api/Netly.Tcp.TcpClient.html#Netly_Tcp_TcpClient_UseEncryption_
  commentId: Overload:Netly.Tcp.TcpClient.UseEncryption
  isSpec: "True"
  fullName: Netly.Tcp.TcpClient.UseEncryption
  nameWithType: TcpClient.UseEncryption
- uid: Netly.Tcp.TcpServer
  name: TcpServer
  href: api/Netly.Tcp.TcpServer.html
  commentId: T:Netly.Tcp.TcpServer
  fullName: Netly.Tcp.TcpServer
  nameWithType: TcpServer
- uid: Netly.Tcp.TcpServer.#ctor
  name: TcpServer()
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer__ctor
  commentId: M:Netly.Tcp.TcpServer.#ctor
  fullName: Netly.Tcp.TcpServer.TcpServer()
  nameWithType: TcpServer.TcpServer()
- uid: Netly.Tcp.TcpServer.#ctor*
  name: TcpServer
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer__ctor_
  commentId: Overload:Netly.Tcp.TcpServer.#ctor
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.TcpServer
  nameWithType: TcpServer.TcpServer
- uid: Netly.Tcp.TcpServer.BroadcastToData(System.Byte[])
  name: BroadcastToData(Byte[])
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_BroadcastToData_System_Byte___
  commentId: M:Netly.Tcp.TcpServer.BroadcastToData(System.Byte[])
  name.vb: BroadcastToData(Byte())
  fullName: Netly.Tcp.TcpServer.BroadcastToData(System.Byte[])
  fullName.vb: Netly.Tcp.TcpServer.BroadcastToData(System.Byte())
  nameWithType: TcpServer.BroadcastToData(Byte[])
  nameWithType.vb: TcpServer.BroadcastToData(Byte())
- uid: Netly.Tcp.TcpServer.BroadcastToData*
  name: BroadcastToData
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_BroadcastToData_
  commentId: Overload:Netly.Tcp.TcpServer.BroadcastToData
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.BroadcastToData
  nameWithType: TcpServer.BroadcastToData
- uid: Netly.Tcp.TcpServer.BroadcastToEvent(System.String,System.Byte[])
  name: BroadcastToEvent(String, Byte[])
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_BroadcastToEvent_System_String_System_Byte___
  commentId: M:Netly.Tcp.TcpServer.BroadcastToEvent(System.String,System.Byte[])
  name.vb: BroadcastToEvent(String, Byte())
  fullName: Netly.Tcp.TcpServer.BroadcastToEvent(System.String, System.Byte[])
  fullName.vb: Netly.Tcp.TcpServer.BroadcastToEvent(System.String, System.Byte())
  nameWithType: TcpServer.BroadcastToEvent(String, Byte[])
  nameWithType.vb: TcpServer.BroadcastToEvent(String, Byte())
- uid: Netly.Tcp.TcpServer.BroadcastToEvent*
  name: BroadcastToEvent
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_BroadcastToEvent_
  commentId: Overload:Netly.Tcp.TcpServer.BroadcastToEvent
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.BroadcastToEvent
  nameWithType: TcpServer.BroadcastToEvent
- uid: Netly.Tcp.TcpServer.Clients
  name: Clients
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_Clients
  commentId: P:Netly.Tcp.TcpServer.Clients
  fullName: Netly.Tcp.TcpServer.Clients
  nameWithType: TcpServer.Clients
- uid: Netly.Tcp.TcpServer.Clients*
  name: Clients
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_Clients_
  commentId: Overload:Netly.Tcp.TcpServer.Clients
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.Clients
  nameWithType: TcpServer.Clients
- uid: Netly.Tcp.TcpServer.Close
  name: Close()
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_Close
  commentId: M:Netly.Tcp.TcpServer.Close
  fullName: Netly.Tcp.TcpServer.Close()
  nameWithType: TcpServer.Close()
- uid: Netly.Tcp.TcpServer.Close*
  name: Close
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_Close_
  commentId: Overload:Netly.Tcp.TcpServer.Close
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.Close
  nameWithType: TcpServer.Close
- uid: Netly.Tcp.TcpServer.Host
  name: Host
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_Host
  commentId: P:Netly.Tcp.TcpServer.Host
  fullName: Netly.Tcp.TcpServer.Host
  nameWithType: TcpServer.Host
- uid: Netly.Tcp.TcpServer.Host*
  name: Host
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_Host_
  commentId: Overload:Netly.Tcp.TcpServer.Host
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.Host
  nameWithType: TcpServer.Host
- uid: Netly.Tcp.TcpServer.IsEncrypted
  name: IsEncrypted
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_IsEncrypted
  commentId: P:Netly.Tcp.TcpServer.IsEncrypted
  fullName: Netly.Tcp.TcpServer.IsEncrypted
  nameWithType: TcpServer.IsEncrypted
- uid: Netly.Tcp.TcpServer.IsEncrypted*
  name: IsEncrypted
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_IsEncrypted_
  commentId: Overload:Netly.Tcp.TcpServer.IsEncrypted
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.IsEncrypted
  nameWithType: TcpServer.IsEncrypted
- uid: Netly.Tcp.TcpServer.OnAfterOpen(Action{Socket})
  name: OnAfterOpen(Action<Socket>)
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnAfterOpen_Action_Socket__
  commentId: M:Netly.Tcp.TcpServer.OnAfterOpen(Action{Socket})
  name.vb: OnAfterOpen(Action(Of Socket))
  fullName: Netly.Tcp.TcpServer.OnAfterOpen(Action<Socket>)
  fullName.vb: Netly.Tcp.TcpServer.OnAfterOpen(Action(Of Socket))
  nameWithType: TcpServer.OnAfterOpen(Action<Socket>)
  nameWithType.vb: TcpServer.OnAfterOpen(Action(Of Socket))
- uid: Netly.Tcp.TcpServer.OnAfterOpen*
  name: OnAfterOpen
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnAfterOpen_
  commentId: Overload:Netly.Tcp.TcpServer.OnAfterOpen
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.OnAfterOpen
  nameWithType: TcpServer.OnAfterOpen
- uid: Netly.Tcp.TcpServer.OnBeforeOpen(Action{Socket})
  name: OnBeforeOpen(Action<Socket>)
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnBeforeOpen_Action_Socket__
  commentId: M:Netly.Tcp.TcpServer.OnBeforeOpen(Action{Socket})
  name.vb: OnBeforeOpen(Action(Of Socket))
  fullName: Netly.Tcp.TcpServer.OnBeforeOpen(Action<Socket>)
  fullName.vb: Netly.Tcp.TcpServer.OnBeforeOpen(Action(Of Socket))
  nameWithType: TcpServer.OnBeforeOpen(Action<Socket>)
  nameWithType.vb: TcpServer.OnBeforeOpen(Action(Of Socket))
- uid: Netly.Tcp.TcpServer.OnBeforeOpen*
  name: OnBeforeOpen
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnBeforeOpen_
  commentId: Overload:Netly.Tcp.TcpServer.OnBeforeOpen
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.OnBeforeOpen
  nameWithType: TcpServer.OnBeforeOpen
- uid: Netly.Tcp.TcpServer.OnClose(Action)
  name: OnClose(Action)
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnClose_Action_
  commentId: M:Netly.Tcp.TcpServer.OnClose(Action)
  fullName: Netly.Tcp.TcpServer.OnClose(Action)
  nameWithType: TcpServer.OnClose(Action)
- uid: Netly.Tcp.TcpServer.OnClose*
  name: OnClose
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnClose_
  commentId: Overload:Netly.Tcp.TcpServer.OnClose
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.OnClose
  nameWithType: TcpServer.OnClose
- uid: Netly.Tcp.TcpServer.OnData(Action{Netly.Tcp.TcpClient,System.Byte[]})
  name: OnData(Action<TcpClient, Byte[]>)
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnData_Action_Netly_Tcp_TcpClient_System_Byte____
  commentId: M:Netly.Tcp.TcpServer.OnData(Action{Netly.Tcp.TcpClient,System.Byte[]})
  name.vb: OnData(Action(Of TcpClient, Byte()))
  fullName: Netly.Tcp.TcpServer.OnData(Action<Netly.Tcp.TcpClient, System.Byte[]>)
  fullName.vb: Netly.Tcp.TcpServer.OnData(Action(Of Netly.Tcp.TcpClient, System.Byte()))
  nameWithType: TcpServer.OnData(Action<TcpClient, Byte[]>)
  nameWithType.vb: TcpServer.OnData(Action(Of TcpClient, Byte()))
- uid: Netly.Tcp.TcpServer.OnData*
  name: OnData
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnData_
  commentId: Overload:Netly.Tcp.TcpServer.OnData
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.OnData
  nameWithType: TcpServer.OnData
- uid: Netly.Tcp.TcpServer.OnEnter(Action{Netly.Tcp.TcpClient})
  name: OnEnter(Action<TcpClient>)
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnEnter_Action_Netly_Tcp_TcpClient__
  commentId: M:Netly.Tcp.TcpServer.OnEnter(Action{Netly.Tcp.TcpClient})
  name.vb: OnEnter(Action(Of TcpClient))
  fullName: Netly.Tcp.TcpServer.OnEnter(Action<Netly.Tcp.TcpClient>)
  fullName.vb: Netly.Tcp.TcpServer.OnEnter(Action(Of Netly.Tcp.TcpClient))
  nameWithType: TcpServer.OnEnter(Action<TcpClient>)
  nameWithType.vb: TcpServer.OnEnter(Action(Of TcpClient))
- uid: Netly.Tcp.TcpServer.OnEnter*
  name: OnEnter
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnEnter_
  commentId: Overload:Netly.Tcp.TcpServer.OnEnter
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.OnEnter
  nameWithType: TcpServer.OnEnter
- uid: Netly.Tcp.TcpServer.OnError(Action{Exception})
  name: OnError(Action<Exception>)
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnError_Action_Exception__
  commentId: M:Netly.Tcp.TcpServer.OnError(Action{Exception})
  name.vb: OnError(Action(Of Exception))
  fullName: Netly.Tcp.TcpServer.OnError(Action<Exception>)
  fullName.vb: Netly.Tcp.TcpServer.OnError(Action(Of Exception))
  nameWithType: TcpServer.OnError(Action<Exception>)
  nameWithType.vb: TcpServer.OnError(Action(Of Exception))
- uid: Netly.Tcp.TcpServer.OnError*
  name: OnError
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnError_
  commentId: Overload:Netly.Tcp.TcpServer.OnError
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.OnError
  nameWithType: TcpServer.OnError
- uid: Netly.Tcp.TcpServer.OnEvent(Action{Netly.Tcp.TcpClient,System.String,System.Byte[]})
  name: OnEvent(Action<TcpClient, String, Byte[]>)
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnEvent_Action_Netly_Tcp_TcpClient_System_String_System_Byte____
  commentId: M:Netly.Tcp.TcpServer.OnEvent(Action{Netly.Tcp.TcpClient,System.String,System.Byte[]})
  name.vb: OnEvent(Action(Of TcpClient, String, Byte()))
  fullName: Netly.Tcp.TcpServer.OnEvent(Action<Netly.Tcp.TcpClient, System.String, System.Byte[]>)
  fullName.vb: Netly.Tcp.TcpServer.OnEvent(Action(Of Netly.Tcp.TcpClient, System.String, System.Byte()))
  nameWithType: TcpServer.OnEvent(Action<TcpClient, String, Byte[]>)
  nameWithType.vb: TcpServer.OnEvent(Action(Of TcpClient, String, Byte()))
- uid: Netly.Tcp.TcpServer.OnEvent*
  name: OnEvent
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnEvent_
  commentId: Overload:Netly.Tcp.TcpServer.OnEvent
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.OnEvent
  nameWithType: TcpServer.OnEvent
- uid: Netly.Tcp.TcpServer.OnExit(Action{Netly.Tcp.TcpClient})
  name: OnExit(Action<TcpClient>)
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnExit_Action_Netly_Tcp_TcpClient__
  commentId: M:Netly.Tcp.TcpServer.OnExit(Action{Netly.Tcp.TcpClient})
  name.vb: OnExit(Action(Of TcpClient))
  fullName: Netly.Tcp.TcpServer.OnExit(Action<Netly.Tcp.TcpClient>)
  fullName.vb: Netly.Tcp.TcpServer.OnExit(Action(Of Netly.Tcp.TcpClient))
  nameWithType: TcpServer.OnExit(Action<TcpClient>)
  nameWithType.vb: TcpServer.OnExit(Action(Of TcpClient))
- uid: Netly.Tcp.TcpServer.OnExit*
  name: OnExit
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnExit_
  commentId: Overload:Netly.Tcp.TcpServer.OnExit
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.OnExit
  nameWithType: TcpServer.OnExit
- uid: Netly.Tcp.TcpServer.OnOpen(Action)
  name: OnOpen(Action)
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnOpen_Action_
  commentId: M:Netly.Tcp.TcpServer.OnOpen(Action)
  fullName: Netly.Tcp.TcpServer.OnOpen(Action)
  nameWithType: TcpServer.OnOpen(Action)
- uid: Netly.Tcp.TcpServer.OnOpen*
  name: OnOpen
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_OnOpen_
  commentId: Overload:Netly.Tcp.TcpServer.OnOpen
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.OnOpen
  nameWithType: TcpServer.OnOpen
- uid: Netly.Tcp.TcpServer.Open(Netly.Core.Host,System.Int32)
  name: Open(Host, Int32)
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_Open_Netly_Core_Host_System_Int32_
  commentId: M:Netly.Tcp.TcpServer.Open(Netly.Core.Host,System.Int32)
  fullName: Netly.Tcp.TcpServer.Open(Netly.Core.Host, System.Int32)
  nameWithType: TcpServer.Open(Host, Int32)
- uid: Netly.Tcp.TcpServer.Open*
  name: Open
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_Open_
  commentId: Overload:Netly.Tcp.TcpServer.Open
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.Open
  nameWithType: TcpServer.Open
- uid: Netly.Tcp.TcpServer.Opened
  name: Opened
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_Opened
  commentId: P:Netly.Tcp.TcpServer.Opened
  fullName: Netly.Tcp.TcpServer.Opened
  nameWithType: TcpServer.Opened
- uid: Netly.Tcp.TcpServer.Opened*
  name: Opened
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_Opened_
  commentId: Overload:Netly.Tcp.TcpServer.Opened
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.Opened
  nameWithType: TcpServer.Opened
- uid: Netly.Tcp.TcpServer.UseEncryption(System.Boolean)
  name: UseEncryption(Boolean)
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_UseEncryption_System_Boolean_
  commentId: M:Netly.Tcp.TcpServer.UseEncryption(System.Boolean)
  fullName: Netly.Tcp.TcpServer.UseEncryption(System.Boolean)
  nameWithType: TcpServer.UseEncryption(Boolean)
- uid: Netly.Tcp.TcpServer.UseEncryption*
  name: UseEncryption
  href: api/Netly.Tcp.TcpServer.html#Netly_Tcp_TcpServer_UseEncryption_
  commentId: Overload:Netly.Tcp.TcpServer.UseEncryption
  isSpec: "True"
  fullName: Netly.Tcp.TcpServer.UseEncryption
  nameWithType: TcpServer.UseEncryption
